/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.VaccinationTrackerRole;

import Business.Ecosystem;
import Business.Enterprise.Enterprise;
import Business.Mother.Mother;
import Business.Organization.HospitalTrackerOrganization;
import Business.Organization.VaccinationTrackerOrganization;
import Business.UserAccount.UserAccount;
import Business.VaccinationTrackerWorkQueue.HospitalTrackerWorkRequest;
import Business.VaccinationTrackerWorkQueue.VaccinationDoctorWorkRequest;
import Business.VaccinationTrackerWorkQueue.VaccinationTrackerWorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nupur
 */
public class VaccinationTrackerWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form VaccinationTrackerWorkAreaJPanel
     */
   
JPanel userProcessContainer; UserAccount account; VaccinationTrackerOrganization vaccinationTrackerOrganization; Enterprise enterprise; Ecosystem business;
    public VaccinationTrackerWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, VaccinationTrackerOrganization vaccinationTrackerOrganization, Enterprise enterprise, Ecosystem business) {
       initComponents();
       this.userProcessContainer=userProcessContainer;
       this.account=account;
       this.vaccinationTrackerOrganization=vaccinationTrackerOrganization;
       this.enterprise=enterprise;
       this.business=business;
       populateMothers();
       populateRequestTable3();
       populateRequestTable4();
       
    }
 public void populateRequestTable3(){
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();
        
        model.setRowCount(0);
        
        for (VaccinationTrackerWorkRequest request1 : account.getVaccinationTrackerWorkQueue().getWorkRequestListV()){

    
            if(request1 instanceof HospitalTrackerWorkRequest)
        {

            Object[] row = new Object[8];
              
            row[0] = request1;
            row[1] = request1.getmName();
            row[2] = request1.getBabyName();
            row[3] = request1.gethName();
            row[4]=request1.getSender();
            row[5] = request1.getReceiver();
            row[6] = request1.getStatus();
            String result1 = ((HospitalTrackerWorkRequest) request1).getVaccResult();
            row[7] = result1 == null ? "Waiting" : result1;
            model.addRow(row);
        }
    
 }
}        
 public void populateRequestTable4(){
        DefaultTableModel model = (DefaultTableModel) workRequestJTable1.getModel();
        
        model.setRowCount(0);
        
        for (VaccinationTrackerWorkRequest request1 : account.getVaccinationTrackerWorkQueue().getWorkRequestListV()){

    
            if(request1 instanceof VaccinationDoctorWorkRequest)
        {

            Object[] row = new Object[8];
              
            row[0] = request1;
            row[1] = request1.getmName();
            row[2] = request1.getBabyName();
            row[3] = request1.gethName();
            row[4]=request1.getSender();
            row[5] = request1.getReceiver();
            row[6] = request1.getStatus();
            String result1 = ((VaccinationDoctorWorkRequest) request1).getVaccineName();
            row[7] = result1 == null ? "Waiting" : result1;
            model.addRow(row);
        }
    
 }
}
 
 public void populateMothers() {
        DefaultTableModel model = (DefaultTableModel) tblMother1.getModel();
        model.setRowCount(0);

                    for (Mother mother : business.getMotherDirectory().getMotherList()) {
                        Object[] row = new Object[2];

                        row[0] = mother;
                        row[1] = mother.getAge();
                        
                        model.addRow(row);
                    }
                }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        workRequestJTable2 = new javax.swing.JTable();
        btnRequestHospital1 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        workRequestJTable3 = new javax.swing.JTable();
        btnVaccDr1 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblMother = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        btnRequestHospital = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        workRequestJTable1 = new javax.swing.JTable();
        btnVaccDr = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblMother1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        workRequestJTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Message", "Mother name", "Child Name", "Hospital Name", "Sender", "Receiver", "Status", "Result"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(workRequestJTable2);

        btnRequestHospital1.setText("Request  Hospital");
        btnRequestHospital1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestHospital1ActionPerformed(evt);
            }
        });

        workRequestJTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Message", "Mother name", "Child Name", "Sender", "Receiver", "Status", "Vaccine Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(workRequestJTable3);

        btnVaccDr1.setText("Request Vaccination Docror");
        btnVaccDr1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVaccDr1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnVaccDr1)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRequestHospital1)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(125, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(btnRequestHospital1)
                .addGap(40, 40, 40)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnVaccDr1)
                .addContainerGap(161, Short.MAX_VALUE))
        );

        tblMother.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mother Name", "Age"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tblMother);

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Message", "Mother name", "Child Name", "Hospital Name", "Sender", "Receiver", "Status", "Result"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(workRequestJTable);

        btnRequestHospital.setText("Request  Hospital");
        btnRequestHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestHospitalActionPerformed(evt);
            }
        });

        workRequestJTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Message", "Mother name", "Child Name", "Sender", "Receiver", "Status", "Vaccine Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(workRequestJTable1);

        btnVaccDr.setText("Request Vaccination Doctor");
        btnVaccDr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVaccDrActionPerformed(evt);
            }
        });

        tblMother1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mother Name", "Age"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(tblMother1);

        jLabel1.setText("Hospital Request");

        jLabel2.setText("Doctor Request");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnRequestHospital)
                                    .addGap(52, 52, 52)
                                    .addComponent(btnVaccDr))))))
                .addContainerGap(83, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jLabel1)
                        .addGap(124, 124, 124)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(45, 45, 45)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRequestHospital)
                    .addComponent(btnVaccDr))
                .addContainerGap(68, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRequestHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestHospitalActionPerformed
        // TODO add your handling code here:
         int selectedRow = tblMother1.getSelectedRow();
    if(selectedRow >=0){

        Mother m = (Mother) tblMother1.getValueAt(selectedRow, 0);

        RequestHospitalTrackerJPanel requestHospitalTrackerJPanel =new RequestHospitalTrackerJPanel (vaccinationTrackerOrganization,userProcessContainer, account,business,enterprise,m);
            userProcessContainer.add("RequestHospitalTrackerJPanel",requestHospitalTrackerJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
    }


        else{
            JOptionPane.showMessageDialog(null, "Please select mother name");
    }
           
           
    }//GEN-LAST:event_btnRequestHospitalActionPerformed

    private void btnVaccDrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVaccDrActionPerformed
        // TODO add your handling code here:
          int selectedRow = tblMother1.getSelectedRow();
          if(selectedRow >=0){

        Mother m = (Mother) tblMother1.getValueAt(selectedRow, 0);

       
          RequestVaccDoctorJPanel r=new  RequestVaccDoctorJPanel (vaccinationTrackerOrganization,userProcessContainer, account,business,enterprise,m);
            userProcessContainer.add("RequestHospitalTrackerJPanel",r);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
    }


        else{
            JOptionPane.showMessageDialog(null, "Please select mother name");
    }
         
    }//GEN-LAST:event_btnVaccDrActionPerformed

    private void btnRequestHospital1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestHospital1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRequestHospital1ActionPerformed

    private void btnVaccDr1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVaccDr1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnVaccDr1ActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRequestHospital;
    private javax.swing.JButton btnRequestHospital1;
    private javax.swing.JButton btnVaccDr;
    private javax.swing.JButton btnVaccDr1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTable tblMother;
    private javax.swing.JTable tblMother1;
    private javax.swing.JTable workRequestJTable;
    private javax.swing.JTable workRequestJTable1;
    private javax.swing.JTable workRequestJTable2;
    private javax.swing.JTable workRequestJTable3;
    // End of variables declaration//GEN-END:variables
}
